/*
 * nom         : Client
 * 
 * description : cette classe nous sert pour qu'un client puisse se connecter au
 * serveur et puisse faire ses demandes
 * 
 * Date        : 31/03/2023
 * 
 * Copyright   : Teinturier, Qaeze
 */

package projet.client;

import java.io.*;
import java.net.*;
import java.util.*;

public class Client {
    
    private final static int            port = 8000;  /*port */
    private static       Socket         s;            /*socket pour la connexion */
    private static       Scanner        sc;           /*scanner pour récupérer ce que rentre le client au clavier */
    private static       PrintWriter    writer;       /*pour envoyer des messages au serveur */
    private static       BufferedReader reader;       /*pour récupérer des messages du serveur */

    public static void main(String[] args){
        try{

            //connexion au serveur et préparation à la communication
            s = new Socket(args[0], port);
            sc = new Scanner(System.in);
            writer = new PrintWriter( new BufferedWriter(new OutputStreamWriter(s.getOutputStream())),true);
            reader = new BufferedReader(new InputStreamReader(s.getInputStream()));
            String msg = "";


            //identification en tant que Client
            writer.println("Client");
            writer.flush();

            //échange entre le serveur et le client
            while(!msg.equals("END")){

                //affichage des commandes
                System.out.println("\nVoici les commandes du serveur : Moyenne, Persistance, Proportion, END");

                //envoi de la requête
                msg=sc.nextLine();
                writer.println(msg);
                writer.flush();

                if(!msg.equals("END")){

                    //appel d'une fonction selon la demande
                    switch(msg){
                        case "Moyenne":{
                            Moyenne();
                            break;
                        }
                        case "Persistance": {
                            Persistance();
                            break;
                        }
                        case "Proportion":{
                            Proportion();
                            break;
                        }
                    }
                }
            }

            //fermeture
            writer.close();
            reader.close();
            sc.close();
            s.close();
        }
        catch(IOException e){e.printStackTrace();}
    }

    /*
     * méthode pour gérer la requête de moyenne
     */
    public static void Moyenne(){
        try{

            //on affiche le message des commandes correspondantes
            System.out.println("Moyenne totale (TOTALE) ou sur un intervalle (INTERVALLE) ?");
            //on renvoie la commande souhaitée
            String commande = sc.nextLine();
            writer.println(commande);
            writer.flush();

            if(commande.equals("TOTALE")){
                //si on veut la moyenne de tout ce qui a été déjà calculé, on récupére et on affiche le résultat
                String resultat = reader.readLine();
                System.out.println("La moyenne sur toutes les valeurs déjà calculées est " + resultat); 
            }
            if(commande.equals("INTERVALLE")){
                //on récupère le nombre max possible et on affiche la note
                String max = reader.readLine();
                System.out.println("Les chiffres de cette intervalle doivent être inférieurs à " + max);

                //on affiche la première instruction
                System.out.println("Ecrivez le premier chiffre de l'intervalle");

                // on récupère le premier nombre et on l'envoit au serveur
                String a = sc.nextLine();
                writer.println(a);
                writer.flush();

                //on fait de même avec la deuxième instruction et le deuxième chiffre
                System.out.println("Ecrivez le dernier chiffre de l'intervalle");
                String b = sc.nextLine();
                writer.println(b);
                writer.flush();

                //on récupère le résultat et on l'affiche
                String resultat = reader.readLine();
                System.out.println("La moyenne sur cet intervalle est " + resultat);
            }
        }
        catch(IOException e){e.printStackTrace();}
    }

    /*
     * méthode pour demander la persistance d'un nombre
     */
    public static void Persistance(){
        try{
            //on récupère le nombre max possible
            int max = Integer.parseInt(reader.readLine());

            //on affiche l'instruction
            System.out.println("Veuillez rentrer le nombre choisi, il doit être inférieur à " + max);

            //on envoie le nombre choisit
            String nb = sc.nextLine();
            writer.println(nb);
            writer.flush();

            //on récupère le résultat et on l'affiche
            String resultat = reader.readLine();
            System.out.println("Sa persistance est de " + resultat);
        }
        catch(IOException e){e.printStackTrace();}
    }

    /*
     * méthode pour demander le pourcentage du nombre d'occurence d'un ordre
     * par rapport au nombre de valeurs calculées
     */
    public static void Proportion(){
        try{

            //affichage de l'instruction
            System.out.println("Choisissez un ordre de persistance (entre 0 et 11), nous vous rendrons le pourcentage par rapport au nombre de valeurs déjà calculées");
            
            //on envoie le nombre choisit
            String nb = sc.nextLine();
            writer.println(nb);
            writer.flush();

            //on récupère le résultat et on l'affiche
            String resultat = reader.readLine();
            System.out.println("Les nombres d'ordre de persistance " + nb + " représentent " + resultat + "% des nombres déjà calculés");
        }
        catch(IOException e){e.printStackTrace();}
    }
}
