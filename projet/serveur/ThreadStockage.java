/*
 * nom         : ThreadStockage
 * 
 * description : cette classe nous permet de stocker nos données
 * 
 * Date        : 31/03/2023
 * 
 * Copyright   : Teinturier, Qaeze
 */


package projet.serveur;

import java.io.*;
import java.util.*;
import projet.echange.*;

class ThreadStockage extends Thread{

    private String                     nom;    /*nom du fichier de la hashtable*/
    private Hashtable<Integer,Integer> HTable; /*hastable avec les valeurs de persistance d'un intervalle*/
    private int                        tab[];  /*tableau du nombre d'occurrence des ordres */
    private double                     moy;    /*numérateur de la moyenne */

    //constructeur
    public ThreadStockage(Message t){

        //on utilise les méthode de la classe TableH pour initialiser no attributs
        this.HTable = t.getHTable();
        this.nom = t.getNom();
        this.tab=t.getRepartitionOrdre();
        this.moy=t.getNumMoy();
    }

    public void run(){
    
        // Création du dossier "Fichier". Il nous servira à stocker les fichiers contenant les Hashtables
        File f = new File("Serveur.java");
        String filename = f.getAbsolutePath();
        filename = filename.replace("Serveur.java", "");
        File files = new File(filename+"/Fichier");

        

        //Vérification de l'existance du dossier "Fichier"
        if (!files.exists()) {
            files.mkdir();
        }    
        filename = filename+"Fichier/"+nom;
        
        try
        {  
            //On enregistre la Hashtable dans le fichier "nom.ser"
            FileOutputStream file = new FileOutputStream(filename);
            ObjectOutputStream out = new ObjectOutputStream(file);
            out.writeObject(HTable);
            out.close();
            file.close();
        }catch(IOException ex){ex.printStackTrace();}

        //stockage du tableau dans le serveur et dans le fichier du tableau.
        Serveur.StockageTabMoy(tab,moy);
        Serveur.Affichage();

    //Fin de l'enregistrement
    }
}
