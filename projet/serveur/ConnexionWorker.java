/*
 * nom         : ConnexionWorker
 * 
 * description : cette classe gère la communication entre le serveur et un worker
 * 
 * Date        : 31/03/2023
 * 
 * Copyright   : Teinturier, Qaeze
 */

package projet.serveur;

import java.io.*;
import java.net.*;
import java.util.*;
import projet.echange.*;

public class ConnexionWorker extends Thread{

    private BufferedReader    reader; /*variable pour récupérer les messages du worker */
    private PrintWriter       writer; /*variable pour envoyer un message au worker */
    private Socket            soc;    /*socket pour la communication*/ 
    private ObjectInputStream ois;    /*variable pour récupérer des objets envoyés par le worker*/

    // Attributs pour l'affichage
    private int pourcentage;
    private String etat;

    public ConnexionWorker(Socket soc,BufferedReader r){
        this.soc = soc;
        try{
            this.reader = r;
            this.writer = new PrintWriter( new BufferedWriter(new OutputStreamWriter(this.soc.getOutputStream())),true);
            this.ois = new ObjectInputStream(this.soc.getInputStream());

        }catch(IOException e){e.printStackTrace();}
    }

    /*
     * méthode pour l'affichage des workers
     */
    public ArrayList<String> getStr(){
        ArrayList<String> Str = new ArrayList<String>();
        Str.add("Worker " + this.getName() + "                     ");
        
        if(this.etat.equals("Connecté")){ 
            Str.add(this.etat + "                            ");
            Str.add(affichePourcentage() + "              ");
        } else{ 
            Str.add(this.etat + "                          ");
            Str.add("[####################]              ");
        }
        return Str;
    }

    /*
     * création de la barre de chargement
     */
    public String affichePourcentage(){

        int cpt = 20;
        String s = "[";
        for(int i=0; i<20-this.pourcentage;i++){
            s+="#";
            cpt--;
        }
        while(cpt>0){
            s+=".";
            cpt--;
        }
        s+="]";

        return s;
    }

    public void run(){

        try {
            etat = "Connecté";
            
            //récupération du nombre d'intervalles que le worker va traiter
            double nbRep = (double)Integer.parseInt(reader.readLine());
            double Total = nbRep;

            while(nbRep>0){

                //Initialisation des données pour l'affichage
                this.pourcentage = (int) ((nbRep/Total)*20);
                Serveur.Affichage();

                //on récupère un intervalle et on l'envoie au worker
                int a = Serveur.Intervalle();
                int b = a+99999;
                writer.println(a);
                writer.flush();
                writer.println(b);
                writer.flush();

                //Récupération de la hashtable, de la moyenne et du tableau
                Message tab = (Message) ois.readObject();

                //on lance un thread pour le stockage
                ThreadStockage ThSk = new ThreadStockage(tab);
                ThSk.start();

                nbRep--;
            }
        } catch (Exception e) {e.printStackTrace();}
        try {
            
            //fermeture
            Serveur.FinWorker();
            etat = "Déconnecté";
            Serveur.Affichage();
            reader.close();
            writer.close();
            ois.close();
            soc.close();
        }
        catch (Exception e) {e.printStackTrace();}
    }
}

